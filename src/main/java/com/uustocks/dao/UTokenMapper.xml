<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uustocks.mapper.UTokenMapper">
  <resultMap id="BaseResultMap" type="com.uustocks.entity.UToken">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_user_id" jdbcType="INTEGER" property="uUserId" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="api_version" jdbcType="VARCHAR" property="apiVersion" />
    <result column="versions" jdbcType="BIGINT" property="versions" />
    <result column="del" jdbcType="CHAR" property="del" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, u_user_id, token, ip, device_id, state, insert_time, last_login_time, login_time, 
    api_version, versions, del, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from u_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uustocks.entity.UToken">
    insert into u_token (id, u_user_id, token, 
      ip, device_id, state, insert_time, 
      last_login_time, login_time, api_version, 
      versions, del, remark)
    values (#{id,jdbcType=INTEGER}, #{uUserId,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP}, #{apiVersion,jdbcType=VARCHAR}, 
      #{versions,jdbcType=BIGINT}, #{del,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uustocks.entity.UToken">
    insert into u_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uUserId != null">
        u_user_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="apiVersion != null">
        api_version,
      </if>
      <if test="versions != null">
        versions,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uUserId != null">
        #{uUserId,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="apiVersion != null">
        #{apiVersion,jdbcType=VARCHAR},
      </if>
      <if test="versions != null">
        #{versions,jdbcType=BIGINT},
      </if>
      <if test="del != null">
        #{del,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uustocks.entity.UToken">
    update u_token
    <set>
      <if test="uUserId != null">
        u_user_id = #{uUserId,jdbcType=INTEGER},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="apiVersion != null">
        api_version = #{apiVersion,jdbcType=VARCHAR},
      </if>
      <if test="versions != null">
        versions = #{versions,jdbcType=BIGINT},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uustocks.entity.UToken">
    update u_token
    set u_user_id = #{uUserId,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      api_version = #{apiVersion,jdbcType=VARCHAR},
      versions = #{versions,jdbcType=BIGINT},
      del = #{del,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>