<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uustocks.mapper.UFundRecordMapper">
  <resultMap id="BaseResultMap" type="com.uustocks.entity.UFundRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_user_id" jdbcType="INTEGER" property="uUserId" />
    <result column="record_no" jdbcType="VARCHAR" property="recordNo" />
    <result column="money" jdbcType="BIGINT" property="money" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="pay_merchant" jdbcType="VARCHAR" property="payMerchant" />
    <result column="current_money" jdbcType="BIGINT" property="currentMoney" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="api_version" jdbcType="VARCHAR" property="apiVersion" />
    <result column="del" jdbcType="CHAR" property="del" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, u_user_id, record_no, money, state, type, pay_merchant, current_money, insert_time, 
    update_time, api_version, del, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_fund_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from u_fund_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uustocks.entity.UFundRecord">
    insert into u_fund_record (id, u_user_id, record_no, 
      money, state, type, pay_merchant, 
      current_money, insert_time, update_time, 
      api_version, del, remark
      )
    values (#{id,jdbcType=INTEGER}, #{uUserId,jdbcType=INTEGER}, #{recordNo,jdbcType=VARCHAR}, 
      #{money,jdbcType=BIGINT}, #{state,jdbcType=CHAR}, #{type,jdbcType=VARCHAR}, #{payMerchant,jdbcType=VARCHAR}, 
      #{currentMoney,jdbcType=BIGINT}, #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{apiVersion,jdbcType=VARCHAR}, #{del,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.uustocks.entity.UFundRecord">
    insert into u_fund_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uUserId != null">
        u_user_id,
      </if>
      <if test="recordNo != null">
        record_no,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="payMerchant != null">
        pay_merchant,
      </if>
      <if test="currentMoney != null">
        current_money,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="apiVersion != null">
        api_version,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uUserId != null">
        #{uUserId,jdbcType=INTEGER},
      </if>
      <if test="recordNo != null">
        #{recordNo,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="payMerchant != null">
        #{payMerchant,jdbcType=VARCHAR},
      </if>
      <if test="currentMoney != null">
        #{currentMoney,jdbcType=BIGINT},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="apiVersion != null">
        #{apiVersion,jdbcType=VARCHAR},
      </if>
      <if test="del != null">
        #{del,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uustocks.entity.UFundRecord">
    update u_fund_record
    <set>
      <if test="uUserId != null">
        u_user_id = #{uUserId,jdbcType=INTEGER},
      </if>
      <if test="recordNo != null">
        record_no = #{recordNo,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="payMerchant != null">
        pay_merchant = #{payMerchant,jdbcType=VARCHAR},
      </if>
      <if test="currentMoney != null">
        current_money = #{currentMoney,jdbcType=BIGINT},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="apiVersion != null">
        api_version = #{apiVersion,jdbcType=VARCHAR},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uustocks.entity.UFundRecord">
    update u_fund_record
    set u_user_id = #{uUserId,jdbcType=INTEGER},
      record_no = #{recordNo,jdbcType=VARCHAR},
      money = #{money,jdbcType=BIGINT},
      state = #{state,jdbcType=CHAR},
      type = #{type,jdbcType=VARCHAR},
      pay_merchant = #{payMerchant,jdbcType=VARCHAR},
      current_money = #{currentMoney,jdbcType=BIGINT},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      api_version = #{apiVersion,jdbcType=VARCHAR},
      del = #{del,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>