<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uustocks.mapper.UAccountMapper">
  <resultMap id="BaseResultMap" type="com.uustocks.entity.UAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_user_id" jdbcType="INTEGER" property="uUserId" />
    <result column="total_money" jdbcType="BIGINT" property="totalMoney" />
    <result column="left_money" jdbcType="BIGINT" property="leftMoney" />
    <result column="freeze_money" jdbcType="BIGINT" property="freezeMoney" />
    <result column="invite_money" jdbcType="BIGINT" property="inviteMoney" />
    <result column="total_point" jdbcType="BIGINT" property="totalPoint" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="versions" jdbcType="BIGINT" property="versions" />
    <result column="del" jdbcType="CHAR" property="del" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, u_user_id, total_money, left_money, freeze_money, invite_money, total_point, 
    insert_time, update_time, versions, del, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from u_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uustocks.entity.UAccount">
    insert into u_account (id, u_user_id, total_money, 
      left_money, freeze_money, invite_money, 
      total_point, insert_time, update_time, 
      versions, del, remark)
    values (#{id,jdbcType=INTEGER}, #{uUserId,jdbcType=INTEGER}, #{totalMoney,jdbcType=BIGINT}, 
      #{leftMoney,jdbcType=BIGINT}, #{freezeMoney,jdbcType=BIGINT}, #{inviteMoney,jdbcType=BIGINT}, 
      #{totalPoint,jdbcType=BIGINT}, #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{versions,jdbcType=BIGINT}, #{del,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uustocks.entity.UAccount">
    insert into u_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uUserId != null">
        u_user_id,
      </if>
      <if test="totalMoney != null">
        total_money,
      </if>
      <if test="leftMoney != null">
        left_money,
      </if>
      <if test="freezeMoney != null">
        freeze_money,
      </if>
      <if test="inviteMoney != null">
        invite_money,
      </if>
      <if test="totalPoint != null">
        total_point,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="versions != null">
        versions,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uUserId != null">
        #{uUserId,jdbcType=INTEGER},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=BIGINT},
      </if>
      <if test="leftMoney != null">
        #{leftMoney,jdbcType=BIGINT},
      </if>
      <if test="freezeMoney != null">
        #{freezeMoney,jdbcType=BIGINT},
      </if>
      <if test="inviteMoney != null">
        #{inviteMoney,jdbcType=BIGINT},
      </if>
      <if test="totalPoint != null">
        #{totalPoint,jdbcType=BIGINT},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versions != null">
        #{versions,jdbcType=BIGINT},
      </if>
      <if test="del != null">
        #{del,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uustocks.entity.UAccount">
    update u_account
    <set>
      <if test="uUserId != null">
        u_user_id = #{uUserId,jdbcType=INTEGER},
      </if>
      <if test="totalMoney != null">
        total_money = #{totalMoney,jdbcType=BIGINT},
      </if>
      <if test="leftMoney != null">
        left_money = #{leftMoney,jdbcType=BIGINT},
      </if>
      <if test="freezeMoney != null">
        freeze_money = #{freezeMoney,jdbcType=BIGINT},
      </if>
      <if test="inviteMoney != null">
        invite_money = #{inviteMoney,jdbcType=BIGINT},
      </if>
      <if test="totalPoint != null">
        total_point = #{totalPoint,jdbcType=BIGINT},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versions != null">
        versions = #{versions,jdbcType=BIGINT},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uustocks.entity.UAccount">
    update u_account
    set u_user_id = #{uUserId,jdbcType=INTEGER},
      total_money = #{totalMoney,jdbcType=BIGINT},
      left_money = #{leftMoney,jdbcType=BIGINT},
      freeze_money = #{freezeMoney,jdbcType=BIGINT},
      invite_money = #{inviteMoney,jdbcType=BIGINT},
      total_point = #{totalPoint,jdbcType=BIGINT},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      versions = #{versions,jdbcType=BIGINT},
      del = #{del,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>